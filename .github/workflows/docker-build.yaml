name: Build images and push to GAR

on:
  workflow_dispatch:
    type: [new-tomcat-image]
  repository_dispatch:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  PROJECT_ID: minimus-sa
  REGION: us-central1
  GAR_LOCATION: us-central1-docker.pkg.dev/minimus-sa/

jobs:
  build-push-artifact:
    runs-on: ubuntu-latest
    steps:

      - name: "Checkout"
        uses: "actions/checkout@v3"

      - name: "Download grype"
        run: |
          wget https://packages.mini.dev/scanners/grype/linux-build_linux_amd64_v1/grype && chmod +x grype

      - id: "auth"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      - name: "Install Cosign"
        uses: sigstore/cosign-installer@v3.8.1

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"

      - name: "Use gcloud CLI"
        run: "gcloud info"

      - name: "Minimus registry auth"
        run: docker login -u minimus -p ${{ secrets.MINIMUS_TOKEN }} reg.mini.dev

      - name: "GAR auth"
        run: |-
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet
          
      - name: Log into Docker Hub
        uses: docker/login-action@v2.1.0
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PAT }}
          
      - name: "Check Minimus image signature"
        run: |-
          cosign verify \
            --certificate-oidc-issuer=https://token.actions.githubusercontent.com \
            --certificate-identity=https://github.com/minimusio/images/.github/workflows/build.yaml@refs/heads/main \
            reg.mini.dev/tomcat:11-jre21

      - name: "Download Minimus image SBOM"
        run: |-
          cosign download attestation \
           --predicate-type=https://spdx.dev/Document \
           --platform linux/amd64 \
           reg.mini.dev/openjre:21.0.7 | jq '.payload | @base64d |
           fromjson | .predicate'  > spdx.json

#      - name: "Scan Minimus image SBOM"
#        uses: aquasecurity/trivy-action@0.30.0
#        with:
#          scan-type: 'sbom'
#          scan-ref: 'spdx.json'
#          format: 'table'

      - name: "Scan Minimus image SBOM with grype"
        run: |
          ./grype sbom:spdx.json
           
      - name: Build tomcat image
        run: podman build -t ${{ env.GAR_LOCATION }}tomcat/tomcat-library:latest .

      - name: Build tomcat-mini image
        run: podman build -t ${{ env.GAR_LOCATION }}tomcat/tomcat-mini:latest -f Dockerfile.mini .  
        

      - name: Push tomcat image
        run: podman push ${{ env.GAR_LOCATION }}tomcat/tomcat-library:latest

      - name: Push tomcat-mini image
        run: podman push ${{ env.GAR_LOCATION }}tomcat/tomcat-mini:latest
        
      - name: "Scan tomcat image with grype"
        uses: anchore/scan-action@v6
        with:
          image: '${{ env.GAR_LOCATION }}tomcat/tomcat-library:latest'
          fail-build: false
          output-format: 'table'
          severity-cutoff: 'low'
          by-cve: true
          only-fixed: false
          
      - name: Scan tomcat image
        uses: aquasecurity/trivy-action@0.31.0
        if: always()
        with:
          image-ref: '${{ env.GAR_LOCATION }}tomcat/tomcat-library:latest'
          format: 'table'

      - name: "Scan tomcat-mini image with grype"
        run: |
          ./grype ${{ env.GAR_LOCATION }}tomcat/tomcat-mini:latest

      - name: Scan tomcat-mini image
        uses: aquasecurity/trivy-action@0.31.0
        if: always()
        with:
          image-ref: '${{ env.GAR_LOCATION }}tomcat/tomcat-mini:latest'
          format: 'table'


      - name: Compare Images
        id: docker-scout
        uses: docker/scout-action@v1
        with:
          command: compare
          image: ${{ env.GAR_LOCATION }}tomcat/tomcat-mini:latest
          to: ${{ env.GAR_LOCATION }}tomcat/tomcat-library:latest
          ignore-unchanged: true
          format: markdown
